import React,{useState,useContext,useEffect} from 'react';
import { makeStyles } from '@material-ui/core/styles';
import Paper from '@material-ui/core/Paper';
import Typography from '@material-ui/core/Typography';
import MUIDataTable from 'mui-datatables';
import { fade, darken } from '@material-ui/core/styles/colorManipulator';
import ImportIcon from '@material-ui/icons/GetApp';
import SendIcon from '@material-ui/icons/ArrowForward';
import * as crud from './crud';
import * as Enum from './enums';
import ExportIcon from '@material-ui/icons/Publish';
import { Euro, AttachMoney, Delete,ArrowBack } from '@material-ui/icons';
import { Grid,
    Button,
    TextField } from '@material-ui/core';
import { Autocomplete } from '@material-ui/lab';
import Joker from './joker.jpg';
import { FixedAssetContext } from '.';


const useStyles = makeStyles((theme) => ({
    root: {
        flexGrow: 1,
    },
    table: {
        marginTop: theme.spacing(2),
        '& .MuiTableCell-body': {
          fontSize: theme.typography.fontSize - 1,
        },
        '& .MuiTableRow-root:hover': {
          cursor: 'pointer'
        },
      },
      datatable: {
        '& .MuiTableRow-root:hover': {
          cursor: 'pointer'
        },
        '& .MuiTableHead-root': {
          '& .MuiTableCell-head': {
            color: theme.palette.common.white,
          },
          '& .MuiTableCell-root:nth-child(odd)': {
            backgroundColor: theme.palette.primary.main,
          },
          '& .MuiTableCell-root:nth-child(even)': {
            backgroundColor: darken(theme.palette.primary.main, 0.1),
          },
        },
      },
    paperBase:{
    padding:'15px'
    },
    base:{
        paddingTop: '10px',
        paddingLeft:'10px',
        paddingRight:'10px',
        marginBottom:'20px'
    },
    pap:{
        padding:'10px',
        marginBottom:'15px'
    },
    papy:{
        padding:'12px',
        marginBottom:'15px'
    },
    controlButtons:{
      float:'right'  
    },
    divContent:{
        textAlign:'center',
        margin:'3px'
    }
  }));


const FixedDetails = () => {
    const fixedContext = useContext(FixedAssetContext)
    const classes = useStyles();

    const pics =[
        {
            id:0,
            file:''
        }
    ]

    const [assetData] = useState([
      {assetname:'Air conditioner',assetid:'000910',assetclass:'Machinery',assettype:'Fixed Asset',description:'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Convallis tempor, ticidunut. Eget molestie placerat mattis. sed eget hendrerit quam leo eget',manufacturer:'Mercedes',barcode:'9087890RT',mesurement:'Pieces',dimension:'12 x 15',weight:'30KG',quantity:'200',acquitioncost:'N20000.00',location:'Ikeja',quantity:10,status:'Good'},
      {assetname:'Typewriter',assetid:'7890PO',assetclass:'Machinery',assettype:'Current Asset',description:'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Convallis tempor, ticidunut. Eget molestie placerat mattis. sed eget hendrerit quam leo eget',manufacturer:'Mercedes',barcode:'9087890RT',mesurement:'Pieces',dimension:'12 x 15',weight:'30KG',quantity:'200',acquitioncost:'N20000.00',location:'Ikeja',quantity:10,status:'Disposal'},
      {assetname:'Truck',assetid:'Mary Paul',assetclass:'Machinery',assettype:'Equity',description:'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Convallis tempor, ticidunut. Eget molestie placerat mattis. sed eget hendrerit quam leo eget',manufacturer:'Mercedes',barcode:'9087890RT',mesurement:'Pieces',dimension:'12 x 15',weight:'30KG',quantity:'200',acquitioncost:'N20000.00',location:'Ikeja',quantity:10,status:'Lost'},
      {assetname:'Dilling machine',assetid:'12345LP',assetclass:'Machinery',assettype:'Bank',description:'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Convallis tempor, ticidunut. Eget molestie placerat mattis. sed eget hendrerit quam leo eget',manufacturer:'Mercedes',barcode:'9087890RT',mesurement:'Pieces',dimension:'12 x 15',weight:'30KG',quantity:'200',acquitioncost:'N20000.00',location:'Ikeja',quantity:10,status:'In maintenance'}
    ]);

    const [contentDis,setContentDis] = useState({})

    useEffect(() => {
        getDetails()
        return () =>{
          getDetails()
        }
        },[])
    
     function getDetails(){
         let x = fixedContext.fixedState.display
         setContentDis(assetData[x])
     }   

    return ( 
        <div className={classes.base}>

            <Grid container spacing={4}>
                <Grid item xs={12}>
                 <Paper elevation={3} className={classes.paperBase}>
                  <Grid container spacing={3}>
                      <Grid item xs={3}>
                      <div>
                        <Typography gutterBottom variant="h5" component="h1">
                        Drilling Services
                        </Typography>
                        </div>
                      </Grid>
                      <Grid item xs={3}>

                      </Grid>
                      <Grid item xs={3}>
                          
                      </Grid>
                      <Grid item xs={3}>
                          <div>
                          <Typography gutterBottom variant="body1">
                        Status: {contentDis.status}
                        </Typography>
                          </div>
                       
                      </Grid>

                  </Grid>
                 </Paper>
                </Grid>
               
               <Grid item xs={12}>
                   <Paper elevation={3} className={classes.paperBase}>
                       <Grid container spacing={3}>
                           <Grid item xs={5}>
                               <div>
                                   <img src={`data:image/png;base64,${pics[0].file}`} style={{width:'100%',height:'300px'}} />
                               </div>
                           </Grid>
                           <Grid item xs={7}>
                               <Grid container spacing={3}>
                                   <Grid item xs={12}>
                                   <div>
                               <Typography gutterBottom variant="body1">
                               Asset Name : {contentDis.assetname}
                              </Typography>
                              </div>
                                   </Grid>
                                   <Grid item xs={12}>
                                   <div>
                              <Typography gutterBottom variant="body1">
                              Asset Id : {contentDis.assetid}
                             </Typography>
                             </div>
                                   </Grid>
                                   <Grid item xs={12}>
                                   <div>
                              <Typography gutterBottom variant="body1">
                              Asset Class : {contentDis.assetclass}
                             </Typography>
                             </div>
                                   </Grid>
                                   <Grid item xs={12}>
                                   <div>
                              <Typography gutterBottom variant="body1">
                              Asset Type : {contentDis.assettype}
                             </Typography>
                             </div>
                             </Grid>  
                             <Grid item xs={12}>
                               <Grid container spacing={1}>
                              <Grid item xs={4}>
                              <div>
                              <Typography gutterBottom variant="body1">
                              Description :
                             </Typography>
                             </div> 
                            </Grid>
                            <Grid item xs={8}>
                              <div style={{position:'relative',left:'-8em'}}>
                              <Typography gutterBottom variant="body1">
                              {contentDis.description}
                             </Typography>
                             </div> 
                            </Grid>     
                              </Grid>  
                             
                                   </Grid>         
                               </Grid>
                           </Grid>
                       </Grid>
                   </Paper>
               </Grid>

               <Grid item xs={12}>
                   <Paper elevation={3} style={{paddingTop:'15px',paddingLeft:'25px'}}>
                   <Grid container spacing={3}>
                      <Grid item xs={4}>
                          <Grid container spacing={2}>
                     <Grid item xs={12}>
                    <div>
                    <Typography gutterBottom variant="body1">
                     Manufacturer : {contentDis.manufacturer}
                     </Typography>
                      </div>
                    </Grid>
                    <Grid item xs={12}>
                    <div>
                    <Typography gutterBottom variant="body1">
                     Measurement : {contentDis.mesurement}
                     </Typography>
                      </div>
                    </Grid>
                    <Grid item xs={6}>
                    <div>
                    <Typography gutterBottom variant="body1">
                     Weight : {contentDis.weight}
                     </Typography>
                      </div>
                    </Grid>
                    <Grid item xs={12}>
                    <div>
                    <Typography gutterBottom variant="body1">
                     Acquistion value : {contentDis.acquitioncost}
                     </Typography>
                      </div>
                    </Grid>
                          </Grid>
                          
                    </Grid> 

                    <Grid item xs={4}>
                        <Grid container spacing={2}>
                        <Grid item xs={6}>
                    <div>
                    <Typography gutterBottom variant="body1">
                     Barcode : {contentDis.barcode}
                     </Typography>
                      </div>
                    </Grid>
                   
                    <Grid item xs={12}>
                    <div>
                    <Typography gutterBottom variant="body1">
                     Dimension : {contentDis.dimension}
                     </Typography>
                      </div>
                    </Grid>
                    
                    <Grid item xs={12}>
                    <div>
                    <Typography gutterBottom variant="body1">
                     Quantity : {contentDis.quantity}
                     </Typography>
                      </div>
                    </Grid>
                    <Grid item xs={12}>
                    <div>
                    <Typography gutterBottom variant="body1">
                     Condition : {contentDis.status}
                     </Typography>
                      </div>
                    </Grid>
                    <Grid item xs={12}>
                    <div>
                    <Typography gutterBottom variant="body1">
                     Location : {contentDis.location}
                     </Typography>
                      </div>
                    </Grid>
                        </Grid>
                    </Grid>
                    
                    
                   
                   </Grid>
                   </Paper>
                  
               </Grid>

               <Grid item xs={12}>
                 <div style={{float:"right",padding:'10px'}}>
                     <div>
                     <Button
                variant="contained"
                onClick={()=>{fixedContext.fixedDispatch({type:'NAVIGATION',page:'fixed'})}}
                startIcon={<ArrowBack />}
              >
                Back
              </Button>
                     </div>
                 </div>
              </Grid>

            </Grid>

        </div>
     );
}
 
export default FixedDetails;